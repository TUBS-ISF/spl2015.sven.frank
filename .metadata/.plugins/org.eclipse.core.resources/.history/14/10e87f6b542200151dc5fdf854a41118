/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JGPSTrackEdit.java
 *
 * Created on 08.06.2010, 20:32:46
 */
package jgpstrackedit.view;

/*
 * This software is copyright Hubert Lutnik 2012 and made available through the GNU GPL version 3,
 * see also http://www.gnu.org/copyleft/gpl.html.
 * Usage only for non commercial purposes.
 */
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dialog.ModalityType;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;

import javax.swing.ButtonGroup;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.LineBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import jgpstrackedit.config.Configuration;
import jgpstrackedit.config.ConfigurationObserver;
import jgpstrackedit.config.view.ConfigurationDialog;
import jgpstrackedit.config.view.ViewingConfiguration;
import jgpstrackedit.control.UIController;
import jgpstrackedit.data.Database;
import jgpstrackedit.data.Point;
import jgpstrackedit.data.Track;
import jgpstrackedit.data.util.TourPlaner;
import jgpstrackedit.data.util.UnDoManager;
import jgpstrackedit.map.TileManager;
import jgpstrackedit.map.tiledownload.DlgProcessingTileDownload;
import jgpstrackedit.map.tiledownload.DlgStartTiledownloadMode;
import jgpstrackedit.map.tiledownload.DlgStopTiledownloadMode;
import jgpstrackedit.map.tiledownload.TileDownload;
import jgpstrackedit.map.util.MapExtract;
import jgpstrackedit.map.util.MapExtractManager;
import jgpstrackedit.map.util.TileNumber;
import jgpstrackedit.view.buttons.SaveMapAsImageButton;
import jgpstrackedit.view.buttons.SaveMapExtractButton;
import jgpstrackedit.view.buttons.SaveTrackAsButton;
import jgpstrackedit.view.buttons.SaveTrackButton;
import jgpstrackedit.view.buttons.TrackModificationButtons;
import jgpstrackedit.view.util.ColorEditor;
import jgpstrackedit.view.util.ColorRenderer;
import jgpstrackedit.international.International;
import jgpstrackedit.util.Parser;

/* TODO:
 * AltitudeProfil, Sync selected Point to Map
 - Internationalisierung (Deutsch)

 */


/**
 * JGPSTrackEdit is a tool for editing (gps) tracks and planing (multiple days)
 * tours. This class represent the main class, providing the main method.<br>
 * This software is copyright Hubert Lutnik 2012,2013,2014 and made available through the
 * GNU GPL version 3, see also http://www.gnu.org/copyleft/gpl.html. Usage only
 * for non commercial purposes.
 * 
 * @author Hubert
 */
public class JGPSTrackEdit extends javax.swing.JFrame implements
		ListSelectionListener, MouseListener, MouseMotionListener,
		MouseWheelListener, ConfigurationObserver, KeyListener {


	private SaveTrackButton savetrack_plugin;
	private SaveTrackAsButton savetrackas_plugin;
	


	/** Creates new form JGPSTrackEdit */
	public JGPSTrackEdit() {
		own = this;
		//-------------------------------------------------
		// init plugins
		this.savetrack_plugin = new SaveTrackButton();
		savetrack_plugin.setApplication(this);
		
		this.savetrackas_plugin = new SaveTrackAsButton();
		savetrackas_plugin.setApplication(this);
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		
		// -------------------------------------------------------------------------------------------------
		// added: save
		saveMenuItem = new javax.swing.JMenuItem();
		if(savetrack_plugin != null) {
			saveMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					savetrack_plugin.buttonClicked(uiController);
				}
			});
		}
		saveAsMenuItem = new javax.swing.JMenuItem();

		// -------------------------------------------------------------------------------------------------

		// -------------------------------------------------------------------------------------------------
		// added: save_as
		JButton btnNewButton = new JButton("");
		if(savetrackas_plugin != null) {
			btnNewButton.setBorder(null);
			btnNewButton.setMinimumSize(savetrackas_plugin.getButtonDimension());
			btnNewButton.setMaximumSize(savetrackas_plugin.getButtonDimension());
			btnNewButton.setPreferredSize(savetrackas_plugin.getButtonDimension());
			btnNewButton.setToolTipText(savetrackas_plugin.getButtonToolTip());
			btnNewButton.setContentAreaFilled(false);
			btnNewButton.setIcon(new ImageIcon(JGPSTrackEdit.class
					.getResource(savetrackas_plugin.getButtonIcon())));
			btnNewButton.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					savetrackas_plugin.buttonClicked(uiController);;
				}
			});
		}
		// -------------------------------------------------------------------------------------------------
		

		//-------------------------------------------------------------
		if(savetrack_plugin != null) {
			saveMenuItem.setText(International.getText("menu.File.Save"));
			fileMenu.add(saveMenuItem);
		}
		
		
		if(savetrackas_plugin != null) {
			saveAsMenuItem.setText(International.getText("menu.File.Save_As")
					+ "...");
			saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					saveAsMenuItemActionPerformed(evt);
				}
			});
			fileMenu.add(saveAsMenuItem);
		}
		//-------------------------------------------------------------
		pack();
	}
	
	private javax.swing.JMenuItem saveAsMenuItem;
	private javax.swing.JMenuItem saveMenuItem;
}
